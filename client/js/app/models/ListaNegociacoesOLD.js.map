{"version":3,"sources":["../../app-es6/models/ListaNegociacoesOLD.js"],"names":["ListaNegociacoesOLD","armadilha","_negociacoes","_armadilha","negociacao","push","concat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,+B;;AAEF;AACA,6CAAYC,SAAZ,EAAuB;AAAA;;AACnB,yBAAKC,YAAL,GAAoB,EAApB;AACA,yBAAKC,UAAL,GAAkBF,SAAlB;AACA;AACH;;;;6CAEQG,U,EAAY;AACjB,6BAAKF,YAAL,CAAkBG,IAAlB,CAAuBD,UAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAKD,UAAL,CAAgB,IAAhB;AACH;;;8CAQS;AACN,6BAAKD,YAAL,GAAoB,EAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAKC,UAAL,CAAgB,IAAhB;AACH;;;wCAlBiB;AACd;AACA;AACA,+BAAO,GAAGG,MAAH,CAAU,KAAKJ,YAAf,CAAP;AACH","file":"ListaNegociacoesOLD.js","sourcesContent":["class ListaNegociacoesOLD {\r\n\r\n    //constructor(contexto, armadilha) {\r\n    constructor(armadilha) {\r\n        this._negociacoes = [];\r\n        this._armadilha = armadilha;\r\n        //this._contexto = contexto;\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        this._negociacoes.push(negociacao);\r\n        //Este método não funciona, pois ele executa a função com o \"this(ListaNegociacoes)\", \r\n        //mas eu preciso q ele execute com o \"this(NegociacaoController)\".\r\n        //this._armadilha(this);\r\n        //Portanto utilizamos a função \"Reflect.apply\" para que ele aplique o \"this\" correto.\r\n        //A função recebe \"função que eu quero executar\", \"o this correto\", \"os parametros da função em forma de array\".\r\n        //Reflect.apply(this._armadilha, this._contexto, [this]);\r\n        //******************************************** */\r\n        //Para evitar tudo isso, passamos a função para o construtor como uma arrow function, pois\r\n        //a arrow function mantém o \"this\" original da função.\r\n        this._armadilha(this);\r\n    }\r\n\r\n    get negociacoes() {\r\n        //Cria um novo array e preenche ele com os dados do nosso array.\r\n        //Isso evita que seja feita alterações na nossa variável original.\r\n        return [].concat(this._negociacoes);\r\n    }\r\n\r\n    esvazia() {\r\n        this._negociacoes = [];\r\n        //Este método não funciona, pois ele executa a função com o \"this(ListaNegociacoes)\", \r\n        //mas eu preciso q ele execute com o \"this(NegociacaoController)\".\r\n        //this._armadilha(this);\r\n        //Portanto utilizamos a função \"Reflect.apply\" para que ele aplique o \"this\" correto.\r\n        //A função recebe \"função que eu quero executar\", \"o this correto\", \"os parametros da função em forma de array\".\r\n        //Reflect.apply(this._armadilha, this._contexto, [this]);\r\n        //******************************************** */\r\n        //Para evitar tudo isso, passamos a função para o construtor como uma arrow function, pois\r\n        //a arrow function mantém o \"this\" original da função.\r\n        this._armadilha(this);\r\n    }\r\n}"]}